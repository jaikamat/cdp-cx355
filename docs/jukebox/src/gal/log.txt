--- astaticlist.C	Sun Apr 14 20:38:29 2002
+++ acolorstaticlist.C	Mon Apr 15 21:13:47 2002
@@ -47,35 +47,28 @@
 
 int AStaticList::PageUp(void) {
 
-  for (int i = 1; i < AWindow::h; i++)
-    if (!Up())
-      return 0;
+  int windowsize=(AWindow::Height());
+
+  for (int i=1;i<windowsize;i++) {
+    if (Up()==0) return 0;
+    }
 
   return Refresh();
 } /* PageUp() */
 
 int AStaticList::PageDown(void) {
 
-  for (int i = 1; i < AWindow::h; i++)
-    if (!Down())
-      return 0;
+  int windowsize=(AWindow::Height());
 
-  return Refresh();
-} /* PageDown() */
-
-int AStaticList::Home(void) {
-  line = select = 0;
-  return Refresh();
-} /* Home() */
+  for (int i=1;i<windowsize;i++) {
+    if (Down()==0) return 0;
+    }
 
-int AStaticList::End(void) {
-  line = AWindow::h - 1;
-  select = list.ListSize() - 1;
   return Refresh();
-} /* Home() */
+} /* PageDown() */
 
-int AStaticList::SelectedIndex(void) { return (select + line); }
-String *AStaticList::Selected(void) { return list.Index(select + line); }
+int AStaticList::SelectedIndex(void) { return select; }
+String *AStaticList::Selected(void) { return list.Index(select); }
 String *AStaticList::Index(int index) { return list.Index(index); }
 int AStaticList::ListSize(void) { return list.ListSize(); }
 
@@ -86,36 +79,25 @@
   return 1;
 } /* SetList() */
 
-int AStaticList::ClearList(void) {
-
-  list.ClearList();
-
-  return 1;
-} /* ClearList() */
-
-int AStaticList::AddString(char *str, int flag) {
+int AStaticList::AddString(int row_fg, int row_bg, char *str) {
+  String *ptr = new String(str);
 
   select = 0;
+  ptr->SetColor(row_fg, row_bg);
+  list.InsertRear(ptr);
 
-  if (!flag)
-    list.InsertRear(new String(str));
-  else
-    list.InsertFront(new String(str));
-
-  Refresh();
   return 1;
 } /* AddString() */
 
-int AStaticList::AddString(String *str, int flag) {
-
-  select = 0;
+int AStaticList::AddString(int row_fg, int row_bg, String *str) {
 
-  if (!flag)
-    list.InsertRear(str);
-  else
-    list.InsertFront(str);
+  str->fg=row_fg;
+  str->bg=row_bg;
 
+  select = 0;
+  list.InsertRear(str);
   Refresh();
+
   return 1;
 } /* AddString() */
 
@@ -141,18 +123,12 @@
   return 1;
 } /* RemoveString() */
 
-int AStaticList::ProcessInput(const char *pending) { 
+int AStaticList::ProcessInput(const char *pending) {
 
   HOTKEY(UP, Up());
-  HOTKEY(KEY_APOS, Up());
   HOTKEY(DOWN, Down());
-  HOTKEY(KEY_FS, Down());
   HOTKEY(PAGEUP, PageUp());
-  HOTKEY(KEY_SC, PageUp());
   HOTKEY(PAGEDOWN, PageDown());
-  HOTKEY(KEY_PERIOD, PageDown());
-  HOTKEY(HOME, Home());
-  HOTKEY(END, End());
   HOTKEY(ENTER, OnSelect());
   HOTKEY(DELETE, OnDelete());
 
@@ -166,22 +142,36 @@
   AWindow::Attr(attr);
   AWindow::Color(color);
 
-  sprintf(format, SAVE_LOC "%%s%%s%%s%%s%%-%ds" RESET_ASC FG BG 
-          "%%c" LOAD_LOC, AWindow::w - 1, BLACK, WHITE);
-
-  for (i = 0; i < AWindow::h; i++) {
-    AWindow::Loc(loc, AWindow::x, AWindow::y + i);
+  if (line >= 0) {
+    for (i = 0; i < AWindow::h; i++) {
+      AWindow::Loc(loc, AWindow::x, AWindow::y + i);
+
+      sprintf(format, SAVE_LOC FG BG "%%s%%-%ds" RESET_ASC FG BG
+        "%%c" LOAD_LOC, list.Index(select)->fg, list.Index(select)->bg,
+        AWindow::w - 1, BLACK, WHITE);
+
+      fprintf(stdout,
+              format,  // starting draw location + data string
+              loc,     // starting draw location
+              (line == i) ? REVERSE_ASC : "", // invert scroll bar?
+              ((select + i) < list.ListSize()) ?
+              (list.Index(select + i)) -> Text() : "",
+              !i ? 45 : (( ((i == 1) && (select > 0)) ||
+              ( (i == (AWindow::h - 1)) &&
+              (select + AWindow::h < list.ListSize()) ) ) ? 254 : 32));
+    }
+  } else {
+    AWindow::Loc(loc);
+
+    sprintf(format, SAVE_LOC FG BG "%%s%%-%ds" RESET_ASC FG BG
+      "%%c" LOAD_LOC, list.Index(select)->fg, list.Index(select)->bg,
+      AWindow::w - 1, BLACK, WHITE);
 
-    fprintf(stdout, format, attr, color, loc,
-            (line == i) ? REVERSE_ASC : "",
-            ((select + i) < list.ListSize()) ?
-            (list.Index(select + i)) -> Text() : "",
-            !i ? 45 : (( ((i == 1) && (select > 0)) ||
-            ( (i == (AWindow::h - 1)) &&
-            (select + AWindow::h < list.ListSize()) ) ) ? 254 : 32));
+    fprintf(stdout, format, loc, (list.ListSize() > 0) ?
+            ((list.Index(select)) -> Text()) : "", 43);
   }
 
-  AWindow::Loc(loc, AWindow::x + AWindow::w - 1, AWindow::y);
+  AWindow::Loc(loc, AWindow::x /* + AWindow::w - 1 */, AWindow::y);
   fprintf(stdout, "%s", loc);
 
   return 1;
